schema {
  query: Query
  mutation:Mutation
}
type Topping {
  name: String!
  price: Float!
}
type Dip {
  name: String!
  price: Float!
}
type Sauce {
  name: String!
  price: Float!
}
type Extra {
  name: String!
  price: Float!
}
type Food {
  _id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  discount: Float!
  category: String!
  foodType: String!
  status: String!
  toppings: [Topping!]
  dips: [Dip!]
  sauces: [Sauce!]
  extras: [Extra!]
  numberOfFreeToppings: Int!
  numberOfFreeDips: Int!
  numberOfFreeSauces: Int!
  numberOfFreeExtras: Int!
}
input toppingsInput {
  name: String!
  price: Float!
}
input dipsInput {
  name: String!
  price: Float!
}
input saucesInput {
  name: String!
  price: Float!
}
input extrasInput {
  name: String!
  price: Float!
}

type Query  {
  getFoods: [Food!]
  getFood(id: ID!): Food
}
type Mutation  {
  createFood(
    name: String!
    price: Float!
    description: String!
    image: String!
    discount: Float!
    category: String!
    foodType: String!
    status: String!
    toppings: [toppingsInput!]
    dips: [dipsInput!]
    sauces: [saucesInput!]
    extras: [extrasInput!]
    numberOfFreeToppings: Int!
    numberOfFreeDips: Int!
    numberOfFreeSauces: Int!
    numberOfFreeExtras: Int!
  ): Food
  updateFood(
    id: ID!
    name: String!
    price: Float!
    description: String!
    image: String!
    discount: Float!
    category: String!
    foodType: String!
    status: String!
    toppings: [toppingsInput!]
    dips: [dipsInput!]
    sauces: [saucesInput!]
    extras: [extrasInput!]
    numberOfFreeToppings: Int!
    numberOfFreeDips: Int!
    numberOfFreeSauces: Int!
    numberOfFreeExtras: Int!
  ): Food
  deleteFood(id: ID!): Food
}